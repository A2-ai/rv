name: ci
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-20.04
            rust: stable
          - build: macos
            os: macOS-latest
            rust: stable
          - build: windows
            os: windows-2022
            rust: stable
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Build System Info
        run: rustc --version
      - name: check with all features enabled
        run: |
          cargo check
          cargo check --all-features
      - name: run tests
        run: cargo test --all-features

  integration:
    name: integration-test
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-20.04
            rust: stable
          - build: macos
            os: macOS-latest
            rust: stable
          - build: windows
            os: windows-2022
            rust: stable
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH with repository-specific key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          # ssh key that can only be used to get the repo in example_projects/private-git-dep
          ssh-private-key: ${{ secrets.INTERNAL_SSH_KEY }}

      - name: Add GitHub to known_hosts
        run: |
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Build System Info
        run: rustc --version
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.2'
      - name: Check R on Windows
        if: runner.os == 'Windows'
        run: |
          echo "C:\R\bin" >> $env:GITHUB_PATH
          Get-ChildItem -Path "C:\R\bin" -Force
          R.exe --version
      - name: build binary
        run: |
          cargo build --all-features --release
      - name: run rv sync on all example projects
        run: python .github/scripts/integration.py
