project-dir: rv-val-003
config: rv-val.toml

# This workflow tried to test renv migration "the real way" but ran into multiple issues.
# Kept for reference on why the simple approach (rv-val-002) is better.
#
# What went wrong:
# 1. renv prompts for consent even with consent options set âœ… Fixed with prompt=FALSE
# 2. Framework timeout bug: treats timeouts as failures even when operations finish fast!
#    (renv completes in 24ms, framework waits 5s, then fails the test anyway)
# 3. File visibility: rv can't find renv-generated files but finds manually created ones
#    (both use same thread structure, so not thread isolation - something about renv vs manual)
#
# Why rv-val-002 works instead:
# - Creates renv.lock manually with writeLines() - rv finds it fine
# - Same thread structure as this workflow, just different file creation method  

test:
  steps:
  - name: "Start R"
    run: "R"
    thread: r
 
  - name: "install renv"
    run: |
        options("repos" = c("CRAN" = "https://packagemanager.posit.co/cran/latest"))
        install.packages("renv")
        library(renv)
        cat("RENV_VERSION:", as.character(packageVersion("renv")), "\n")
    thread: r
    assert: "RENV_VERSION: 1.1.4"

  - name: "Initialize renv project"
    run: |
      # Initialize renv project (creates renv/ folder and .Rprofile)  
      renv::init(bare = TRUE, restart = FALSE)
      
      # Verify initialization worked
      cat("Files created:", paste(list.files("."), collapse=", "), "\n")
    thread: r
    assert:
      contains:
        - "Files created: renv"

  - name: "Install packages and create lockfile"
    run: |
      # Install some common packages (force yes to all prompts)
      renv::install(c("dplyr", "ggplot2", "jsonlite"), prompt = FALSE)
      
      # Create snapshot (this generates the renv.lock file)  
      renv::snapshot(prompt = FALSE)
      
      # Ensure renv.lock file is completely written and readable
      if (file.exists("renv.lock")) {
          #lock_conn <- file("renv.lock", "r")
          #lock_content <- readLines(lock_conn)
          #close(lock_conn)
          #if (length(lock_content) > 0) {
              cat("renv.lock exists and is readable")
          #}
      }

      # Create .Rprofile with proper file handling
      #rprofile_conn <- file(".Rprofile", "w")
      writeLines("source(\"renv/activate.R\")", ".Rprofile")
      #flush(rprofile_conn)
      #close(rprofile_conn)
    thread: r
    assert:
      - "renv.lock exists and is readable"
  
  - name: "restart R"
    run: "R"
    thread: r
    restart: true

  - name: "Migrate renv project using rv"  
    run: "rv migrate renv"
    thread: rv
    assert: "renv.lock was successfully migrated to rproject.toml"
